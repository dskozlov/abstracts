// Sass


// SASS отличается от SCSS тем, что в SCSS больше пунктуации. В SASS вся пунктуация опускается.

// Переменные
$color: gray;

html {
  background: $color;
}

// Вложенность
html {
  background: $color;

  h1 {
    font-size: 24pt;
    color: blue;
  }
}

// Разбивка файла на части
@import "normalize";

// Функции
@mixin border_radius($radius) { // ‘$args...' вместо «$radius» — когда число агрументов функции может быть любым
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
// Значение аргумента по умолчанию
@mixin border_radius($radius: 10px) {
  // ...
}

.box {
  border: 1px solid black;
  margin: 10px;
  text-align: center;
  @include border-radius(10px);
}

// Функции с содержимым
@mixin par($border) {
  border: $border solid black;
  margin: 10px;

  @content;
}

.box {
  @include par($border) {
    text-align: center;
  }
}

// Элемент массива (первый)
nth($array, 1);

// Расширение классов
%class {
  border: 1px solid black;
  margin: 10px;
  text-align:center;
}

.class1 {
  @extend: %class;
  color: red;
}

.class2 {
  @extend: %class;
  color: green;
}

// Операции с псевдоклассами
.class {
  border: 1px solid black;
  margin: 10px;
  text-align:center;

  &:hover {
    color: red;
  }
}

// Для тех p, у которых родитель .box
p {
  font-size: 18pt;

  .box & {
    font-size: 24pt
  }
}

// Комментарии
  /* Стандартные комментарии */
  /*! Комментарии, которые сохранятся даже после компрессии */
  // Комментарии только для SASS-кода


// Математические операции
+, -, *, /, %


// Условный оператор
if(true, 1px, 2px) => 1px
if(false, 1px, 2px) => 2px

@if $x==2 { // ( … and … )
  color: red;
} @else {
  lighten(blue, 25%);
}

// Циклы
@for $i from 1 through 3 {
  .item-#{$i} { width: 2em * $i; }
}

$i: 6;
@while $i > 0 {
  .item-#{$i} { width: 2em * $i; }
  $i: $i - 2;
}

@each $animal in puma, sea-slug, egret, salamander {
  .#{$animal}-icon {
    background-image: url('/images/#{$animal}.png');
  }
}

// Map data type (типа двумерных массивов)
$color-btns: (
  default: $color-main,
  hot: $red,
  cool: $blue,
  awesome: $purple
);

@each $key, $value in $color-btns {
  .btn-#{$key} {
    @extend %btn;
    background-color: $value;
  }
}

@include clearfix; // делает так, чтобы элементы из соседнего блока не обтекали элементы из блока для которого прописано это свойство

border-radius: 50%; // делает квадратные блоки круглыми

padding: 3%; // границы контента лучше всего задавать в процентах, чтобы смотрелось одинаково хорошо при разных размерах браузера

// Источники
// http://sass-lang.com/documentation/Sass/Script/Functions.html
// http://compass-style.org/
// http://bourbon.io/
// http://susy.oddbird.net/
// http://thesassway.com/
// Ben Frain — Sass and Compass for Designers
// Wynn Netherland — Sass and Compass in Action